gathering:

Use case analysis:narrative document that describes the sequence of events 
intended behavior of the system being developed, without specifying how that behavior is implemented 

user stories: enable the program/project to be more responsive from its inception 


Analysis: 

know about stakeholders

Classify requirement:
what requirement identify with functions and components the end-users are expecting? 
What requirements identify with the operational activities that need to be done?
What requirements identify with the technical details needed for smooth functioning?
What may be needed for the successful completion of the project?

Analyze:
List all the requirements with regard to priority and relevancy to the project.
Also try to predict the impact of any changes proposed.
Solve the ambiguous and conflicting details that have come up.
The final list of requirements must be clear, unambiguous, concise, feasible, and relevant to the project.

document requirement 

Once the requirements are completely known and the stakeholders/end-users are clear about what they want from the project, what they are going to achieve, and they have seen the prototype and are satisfied, it is time to create a document that will combine all the details and get it signed by all stakeholders/end-users and the project manager. This will be the rule book for the project. All stakeholders, end-users, project personnel, and developers should be given a copy to apprise them of the project goals.


Verification: 

is the process of confirming the completeness and correctness of requirements.
	1) achieve stated business objectives 
	2) meet the needs of stakeholders 
	3) the process are clear and understood by the developer 
- Correct 
- clear 
- Feasible
- Modifiable 
- Necessary 
- prioritized 
- traceable 
- verifiable  
